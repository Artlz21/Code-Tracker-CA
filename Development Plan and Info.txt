Code Tracker app
-------------------------------------------------

This is a code tracker app that will hold and 
display data on the name, duration, and date of 
projects you worked on. It is the next step to
the previous project habit tracker and will have
the same functionality and requirements.


Requirements
-------------------------------------------------

Previous requirements 

- Needs to have a menu display to interact with.
- Needs to retrieve data from db to display on
the functions view, delete, and update.
- Needs to use SQLite.
- Needs to exit program when 0 is entered in menu.
- Needs to store and retrieve from a real db.
- Needs to create a db if one doesn't exist.
- Needs to create a table in db if doesn't exist.
- Should have sufficient exception handling. 

Additional requirements

- Should use Spectre.Console library to display 
data.
- Should have separate file for each class.
- Should show the user the proper format for date
and time entries and prevent anything else.
- Need to use a config file for database path and
connection strings.
- Need a CodingSession class in a file to contain
properties of your session i.e. Id, project, date, and Duration.
- Duration should be calculated based on StartTime
and EndTime entered and should be done in a 
CalculateDuration method.
- User should be able to enter Start and End times
manually.
- Need to Use Dapper ORM for data access instead 
of ADO.NET.
- When reading from db you can't use anonymous 
object, need to read table into a list of coding
sessions.


Components
-------------------------------------------------

1. Menu

- User should see a menu giving options of what
they can do.
- User should be able to enter 0 and exit app.
- User should select an option and be taken to a 
menu for that option that displays data and a 
menu of options.
- User should be shown proper format for each
entry in a given menu.
- User should enter StartTime and EndTime to 
calculate duration.

2. Database

- Should be created at the start if none exists.
- Should have a table created if none exists. 
- Should have columns for Id, Project, Date, and Duration

3. Database management system

- Should have a method for Creating new row.
- Should have a method for Reading a row.
- Should have a method for Updating a row.
- Should have a method for Deleting a row.
- Should store all data in a list before passing
data to table.
- Should receive data in a list to perform each
method.

4. Configuration for sensitive information i.e. 
Connection String

- Should be used to store Connection string

5. Class to handle structuring objects to pass to
and retrieve from database

- Should be used to create data objects to interact
with database.
- Should be use to set and get Id.
- Should be use to set and get Project.
- Should be use to set and get Date.
- Should be use to set and get Duration.

6. A table to organize and display data

- Should receive a list of data from db manager.
- Should construct a table to display data.


Tools/Concepts learned
-------------------------------------------------


